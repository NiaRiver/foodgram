name: Main Foodgram Workflow

on: push

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: foodgram_test
          POSTGRES_PASSWORD: foodgram_test
          POSTGRES_DB: foodgram_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt
          pip install flake8==6.0.0 flake8-isort==6.0.0
      - name: Run Tests and Linters
        env:
          POSTGRES_USER: foodgram_test
          POSTGRES_PASSWORD: foodgram_test
          POSTGRES_DB: foodgram_test
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DEBUG: False
          ALLOWED_HOSTS: '*'
          SECRET_KEY: 'actions_key'
        run: |
          python -m flake8 backend/
          cd backend/
          python manage.py test

  frontend_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd frontend/
          npm ci

      - name: Run Tests
        run: |
          cd frontend/
          npm run test

  send_message_test_success:
    runs-on: ubuntu-latest
    needs:
      - frontend_test
      - tests
    steps:
      - name: Send Message(Tests Success)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Тесты финальго проекта успешно пройдены!
            Коммит: ${{github.event.commits[0].message}}
            Автор: ${{github.actor}}
            ссылка на коммит: https://github.com/${{ github.repository }}/commit/${{github.sha}}

  build_and_push_to_docker_hub:
    name: Push Backend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker:
    name: Push Frontend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: frontend_test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_gateway_and_push_to_dockerhub:
    name: Push Gateway Docker Image to DockerHub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v3
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  send_message_push_build_docker_images_success:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker
      - build_gateway_and_push_to_dockerhub
    steps:
      - name: Send Message(Push-Build Docker Images)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Отправка и сборка образов на DockerHub успешно выполнена!
            Коммит: ${{github.event.commits[0].message}}
            Автор: ${{github.actor}}
            ссылка на коммит: https://github.com/${{ github.repository }}/commit/${{github.sha}}

